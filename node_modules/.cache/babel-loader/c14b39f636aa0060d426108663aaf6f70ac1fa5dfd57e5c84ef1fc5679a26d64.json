{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.flat-map.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport data from \"@/data/data.json\";\nexport default {\n  name: \"Skills\",\n  data() {\n    return {\n      skills: data.skills.categories,\n      heading: data.main.headings.skills,\n      currentCategory: \"All Skills\",\n      defaultMaxYears: 5,\n      // Default maximum years if not specified\n      selectedCategories: [],\n      // Selected categories for filtering\n      categoryColors: {\n        \"Programming Languages\": \"#4CAF50\",\n        Frameworks: \"#FF9800\",\n        Technologies: \"#03A9F4\",\n        \"Front-End\": \"#E91E63\",\n        \"Back-End\": \"#9C27B0\",\n        Methodologies: \"#009688\"\n      }\n    };\n  },\n  computed: {\n    allSkills() {\n      return this.skills.flatMap(category => category.skillList.map(skill => ({\n        ...skill,\n        category: category.category\n      })));\n    },\n    filteredAllSkills() {\n      if (this.selectedCategories.length === 0) {\n        return this.allSkills;\n      }\n      return this.allSkills.filter(skill => this.selectedCategories.includes(skill.category));\n    },\n    filteredSkills() {\n      return this.skills.filter(category => category.category === this.currentCategory);\n    }\n  },\n  methods: {\n    setCategory(category) {\n      this.currentCategory = category;\n    },\n    toggleCategoryFilter(category) {\n      if (this.selectedCategories.includes(category)) {\n        // Remove category from selected filters\n        this.selectedCategories = this.selectedCategories.filter(c => c !== category);\n      } else {\n        // Add category to selected filters\n        this.selectedCategories.push(category);\n      }\n    },\n    getMaxYears(category) {\n      return category.maxYearsToShow || this.defaultMaxYears;\n    }\n  }\n};","map":{"version":3,"names":["data","name","skills","categories","heading","main","headings","currentCategory","defaultMaxYears","selectedCategories","categoryColors","Frameworks","Technologies","Methodologies","computed","allSkills","flatMap","category","skillList","map","skill","filteredAllSkills","length","filter","includes","filteredSkills","methods","setCategory","toggleCategoryFilter","c","push","getMaxYears","maxYearsToShow"],"sources":["src/components/Skills.vue"],"sourcesContent":["<template>\n  <section id=\"skills\" class=\"light-section\">\n    <div class=\"container-fluid\">\n      <h1 class=\"section-header\">{{ heading }}</h1>\n\n      <!-- Filters -->\n      <div class=\"row filters\">\n        <ul class=\"list-inline mx-auto\">\n          <li\n            v-for=\"item in skills\"\n            :key=\"item.category\"\n            class=\"list-inline-item filter\"\n          >\n            <a\n              class=\"nav-item\"\n              :class=\"{ active: item.category === currentCategory }\"\n              @click=\"setCategory(item.category)\"\n            >\n              {{ item.category }}\n            </a>\n          </li>\n          <!-- All Skills Tab -->\n          <li class=\"list-inline-item filter\">\n            <a\n              class=\"nav-item\"\n              :class=\"{ active: currentCategory === 'All Skills' }\"\n              @click=\"setCategory('All Skills')\"\n            >\n              All Skills\n            </a>\n          </li>\n        </ul>\n      </div>\n\n      <!-- Legend for All Skills -->\n      <div v-if=\"currentCategory === 'All Skills'\" class=\"legend\">\n        <div\n          v-for=\"(color, category) in categoryColors\"\n          :key=\"category\"\n          class=\"legend-item\"\n          :class=\"{ selected: selectedCategories.includes(category) }\"\n          :style=\"{ borderColor: color }\"\n          @click=\"toggleCategoryFilter(category)\"\n        >\n          <span class=\"legend-color\" :style=\"{ backgroundColor: color }\"></span>\n          <span class=\"legend-label\">{{ category }}</span>\n        </div>\n      </div>\n\n      <!-- All Skills Grid -->\n      <div v-if=\"currentCategory === 'All Skills'\" class=\"skills-grid\">\n        <div\n          v-for=\"(skill, index) in filteredAllSkills\"\n          :key=\"index\"\n          class=\"skill-item\"\n          :data-category=\"skill.category\"\n          :style=\"{ borderColor: categoryColors[skill.category] }\"\n        >\n          <div class=\"skill-logo\">\n            <img :src=\"skill.logo || defaultLogo\" :alt=\"`${skill.name} logo`\" />\n          </div>\n          <h3>{{ skill.name }}</h3>\n          <p>{{ skill.years }} years</p>\n        </div>\n      </div>\n\n\n\n      <!-- Skill Bars -->\n      <div\n        v-else\n        id=\"skill-container\"\n        v-for=\"item in filteredSkills\"\n        :key=\"item.category\"\n      >\n        <div class=\"category-heading\">\n          <h2><i :class=\"item.faClass\"></i> {{ item.category }}</h2>\n          <h3 v-if=\"item.subtitle\">{{ item.subtitle }}</h3>\n        </div>\n\n        <div class=\"skill-content\">\n          <div class=\"skillbars\">\n            <div\n              class=\"skill\"\n              v-for=\"skill in item.skillList\"\n              :key=\"skill.name\"\n            >\n              <h3 class=\"skill-name\">{{ skill.name }}</h3>\n              <div class=\"outer-bar\">\n                <!-- Subdivisions -->\n                <div\n                  class=\"subdivision\"\n                  v-for=\"n in getMaxYears(item)\"\n                  :key=\"n\"\n                  :style=\"{ left: (n / getMaxYears(item)) * 100 + '%' }\"\n                ></div>\n                <div\n                  class=\"inner-bar\"\n                  :style=\"{ width: (skill.years / getMaxYears(item)) * 100 + '%' }\"\n                ></div>\n                <span class=\"years\">\n                  {{ skill.years }} years / {{ getMaxYears(item) }} years\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n\n<script>\nimport data from \"@/data/data.json\";\n\nexport default {\n  name: \"Skills\",\n  data() {\n    return {\n      skills: data.skills.categories,\n      heading: data.main.headings.skills,\n      currentCategory: \"All Skills\",\n      defaultMaxYears: 5, // Default maximum years if not specified\n      selectedCategories: [], // Selected categories for filtering\n      categoryColors: {\n        \"Programming Languages\": \"#4CAF50\",\n        Frameworks: \"#FF9800\",\n        Technologies: \"#03A9F4\",\n        \"Front-End\": \"#E91E63\",\n        \"Back-End\": \"#9C27B0\",\n        Methodologies: \"#009688\",\n      },\n    };\n  },\n  computed: {\n    allSkills() {\n      return this.skills.flatMap((category) =>\n        category.skillList.map((skill) => ({\n          ...skill,\n          category: category.category,\n        }))\n      );\n    },\n    filteredAllSkills() {\n      if (this.selectedCategories.length === 0) {\n        return this.allSkills;\n      }\n      return this.allSkills.filter((skill) =>\n        this.selectedCategories.includes(skill.category)\n      );\n    },\n    filteredSkills() {\n      return this.skills.filter(\n        (category) => category.category === this.currentCategory\n      );\n    },\n  },\n  methods: {\n    setCategory(category) {\n      this.currentCategory = category;\n    },\n    toggleCategoryFilter(category) {\n      if (this.selectedCategories.includes(category)) {\n        // Remove category from selected filters\n        this.selectedCategories = this.selectedCategories.filter(\n          (c) => c !== category\n        );\n      } else {\n        // Add category to selected filters\n        this.selectedCategories.push(category);\n      }\n    },\n    getMaxYears(category) {\n      return category.maxYearsToShow || this.defaultMaxYears;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n/* General Styling */\n.light-section {\n  background-color: #f9f9f9;\n  padding: 50px 0;\n}\n\n.section-header {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 40px;\n  font-weight: bold;\n}\n\n/* Filters */\n.filters .nav-item {\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n}\n\n.filters .nav-item.active {\n  font-weight: bold;\n  color: #007bff;\n}\n\n.filters .nav-item:hover {\n  color: #0056b3;\n}\n/* Legend */\n.legend {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-bottom: 2rem;\n}\n\n.legend-item.selected {\n  background-color: rgba(0, 0, 0, 0.05);\n  border-color: currentColor;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  border: 1px solid transparent;\n  padding: 0.5rem;\n  border-radius: 8px;\n}\n\n.legend-color {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n}\n\n.legend-label {\n  font-size: 1rem;\n  font-weight: bold;\n}\n\n\n/* Skill Bars */\n.skillbars .skill {\n  margin-bottom: 1rem;\n\n  .skill-name {\n    font-weight: bold;\n  }\n\n  .outer-bar {\n    background: #eaeaea;\n    border-radius: 5px;\n    height: 10px;\n    position: relative;\n    overflow: visible;\n  }\n\n  .inner-bar {\n    height: 100%;\n    background: #007bff;\n    border-radius: 5px;\n    transition: width 0.3s ease;\n  }\n\n  .subdivision {\n    position: absolute;\n    top: 0;\n    height: 100%;\n    width: 2px;\n    background: #fff;\n    opacity: 0.7;\n    transform: translateX(-50%);\n  }\n\n  .years {\n    position: absolute;\n    top: -20px;\n    right: 0;\n    font-size: 0.8rem;\n    color: #333;\n  }\n}\n\n\n\n/* Skills Grid */\n/* Skills Grid */\n.skills-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 1rem;\n\n  .skill-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 0.5rem;\n    border: 2px solid;\n    border-radius: 8px;\n    text-align: center;\n    background: white;\n    transition: background-color 0.3s, border-color 0.3s;\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n\n    .skill-logo {\n      width: 40px;\n      height: 40px;\n      margin-bottom: 0.5rem;\n\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n        border-radius: 50%;\n      }\n    }\n\n    h3 {\n      font-size: 1rem;\n      font-weight: bold;\n      margin: 0.5rem 0;\n    }\n\n    p {\n      font-size: 0.9rem;\n      color: #555;\n    }\n  }\n}\n</style>\n"],"mappings":";;;;;AAkHA,OAAAA,IAAA;AAEA;EACAC,IAAA;EACAD,KAAA;IACA;MACAE,MAAA,EAAAF,IAAA,CAAAE,MAAA,CAAAC,UAAA;MACAC,OAAA,EAAAJ,IAAA,CAAAK,IAAA,CAAAC,QAAA,CAAAJ,MAAA;MACAK,eAAA;MACAC,eAAA;MAAA;MACAC,kBAAA;MAAA;MACAC,cAAA;QACA;QACAC,UAAA;QACAC,YAAA;QACA;QACA;QACAC,aAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,UAAA;MACA,YAAAb,MAAA,CAAAc,OAAA,CAAAC,QAAA,IACAA,QAAA,CAAAC,SAAA,CAAAC,GAAA,CAAAC,KAAA;QACA,GAAAA,KAAA;QACAH,QAAA,EAAAA,QAAA,CAAAA;MACA,GACA;IACA;IACAI,kBAAA;MACA,SAAAZ,kBAAA,CAAAa,MAAA;QACA,YAAAP,SAAA;MACA;MACA,YAAAA,SAAA,CAAAQ,MAAA,CAAAH,KAAA,IACA,KAAAX,kBAAA,CAAAe,QAAA,CAAAJ,KAAA,CAAAH,QAAA,CACA;IACA;IACAQ,eAAA;MACA,YAAAvB,MAAA,CAAAqB,MAAA,CACAN,QAAA,IAAAA,QAAA,CAAAA,QAAA,UAAAV,eACA;IACA;EACA;EACAmB,OAAA;IACAC,YAAAV,QAAA;MACA,KAAAV,eAAA,GAAAU,QAAA;IACA;IACAW,qBAAAX,QAAA;MACA,SAAAR,kBAAA,CAAAe,QAAA,CAAAP,QAAA;QACA;QACA,KAAAR,kBAAA,QAAAA,kBAAA,CAAAc,MAAA,CACAM,CAAA,IAAAA,CAAA,KAAAZ,QACA;MACA;QACA;QACA,KAAAR,kBAAA,CAAAqB,IAAA,CAAAb,QAAA;MACA;IACA;IACAc,YAAAd,QAAA;MACA,OAAAA,QAAA,CAAAe,cAAA,SAAAxB,eAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}