{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport ExperienceItem from \"@/components/ExperienceItem.vue\";\nimport aboAkademiLogo from \"@/assets/images/abo-akademi-logo.gif\";\nexport default {\n  name: \"ProfessionalExperienceSection\",\n  components: {\n    ExperienceItem // Register the ExperienceItem component\n  },\n  data() {\n    return {\n      viewMode: \"all\",\n      // 'all', 'tabs', or 'filter'\n      searchQuery: \"\",\n      selectedYear: new Date().getFullYear().toString(),\n      skillSuggestions: [\"Data Science\", \"Software Engineering\", \"Research\"],\n      experiences: [{\n        company: \"Åbo Akademi University\",\n        position: \"Research Assistant\",\n        location: \"Turku, Finland\",\n        locationCountry: \"fi\",\n        startDate: \"October 2024\",\n        endDate: \"Present\",\n        tasks: [\"Researching automatization of co-simulation Simulink projects through Functional Mock-up Units (FMUs).\", \"Exploring ubiquitous integration of automation logic, enabling model exchange HVAC systems and other complex scenarios.\"],\n        logo: aboAkademiLogo,\n        year: \"2024\",\n        skills: [\"Data Science\", \"Research\"],\n        type: \"Data Science\"\n      }, {\n        company: \"Alstom\",\n        position: \"Master's Thesis Student\",\n        location: \"Remote\",\n        locationCountry: \"se\",\n        startDate: \"February 2024\",\n        endDate: \"October 2024\",\n        tasks: [\"Performed advanced research in Requirements Engineering to achieve automated generation of technical diagrams (i.e. Function Block Diagrams [FBD]) using NLP and AI.\", \"Enhanced the verification process in railway safety-critical systems, reducing human intervention for industrial processes.\"],\n        logo: \"path/to/alstom-logo.png\",\n        year: \"2024\",\n        skills: [\"Requirements Engineering\", \"AI\", \"Research\"],\n        type: \"Research\"\n      }, {\n        company: \"RISE - Research Institute of Sweden\",\n        position: \"Machine Learning Intern\",\n        location: \"Remote\",\n        locationCountry: \"se\",\n        startDate: \"July 2023\",\n        endDate: \"August 2023\",\n        tasks: [\"Worked on Large Language Models (LLMs) like BERT classifiers fine-tuned and evaluated for Enterprise Software Engineering.\", \"Designed a pipeline for multilabel classification of GitHub issues, achieving ~75% accuracy using fine-tuned LLMs.\"],\n        logo: \"path/to/rise-logo.png\",\n        year: \"2023\",\n        skills: [\"Machine Learning\", \"Data Processing\", \"Research\"],\n        type: \"Data Science\"\n      }, {\n        company: \"Empresas Cruz\",\n        position: \"Technical Leader\",\n        location: \"Remote\",\n        locationCountry: \"co\",\n        startDate: \"August 2022\",\n        endDate: \"December 2022\",\n        tasks: [\"Directed the development of Inmobana: a project to match real estate agents and properties with buyers.\", \"Designed architecture based on microservices and AWS, using Serverless Application Model (SAM) templates.\", \"Led a team of two for frontend web development in React and AWS Amplify following Scrum methodology.\"],\n        logo: \"path/to/cruz-logo.png\",\n        year: \"2022\",\n        skills: [\"Architecture\", \"AWS\", \"Scrum\"],\n        type: \"Software Engineering\"\n      }, {\n        company: \"PuntoRed - Veci\",\n        position: \"Backend Leader\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"January 2022\",\n        endDate: \"July 2022\",\n        tasks: [\"Codirected new core business functionalities like small loans and improved payment gateway operations.\", \"Interoperated with other banking APIs to enable Veci as an independent fintech startup, reaching 7000+ small businesses.\"],\n        logo: \"path/to/puntored-logo.png\",\n        year: \"2022\",\n        skills: [\"FinTech\", \"Backend Development\"],\n        type: \"Software Engineering\"\n      }, {\n        company: \"PuntoRed - PuntoPay\",\n        position: \"Backend Engineer\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"September 2020\",\n        endDate: \"December 2021\",\n        tasks: [\"Developed RESTful backend in Ruby on Rails and front-end development with Nuxt.js for PuntoPay’s back office.\", \"Reduced incident resolution times by 87% and compensation times from four days to one day.\", \"Implemented unit tests in Jenkins pipelines for Dockerized microservices architecture with SonarQube assessments.\"],\n        logo: \"path/to/puntored-logo.png\",\n        year: \"2021\",\n        skills: [\"Ruby on Rails\", \"Nuxt.js\", \"CI/CD\"],\n        type: \"Software Engineering\"\n      }, {\n        company: \"Universidad Nacional de Colombia\",\n        position: \"Research Assistant\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"August 2020\",\n        endDate: \"February 2021\",\n        tasks: [\"Performed data analysis on UNCode data to understand student progress in programming courses.\", \"Enhanced automatic reporting in Metabase using MongoDB aggregation queries.\"],\n        logo: \"path/to/unal-logo.png\",\n        year: \"2020\",\n        skills: [\"Data Analysis\", \"MongoDB\"],\n        type: \"Data Science\"\n      }, {\n        company: \"Universidad Nacional de Colombia\",\n        position: \"Teaching Assistant\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"February 2020\",\n        endDate: \"June 2020\",\n        tasks: [\"Led practical sessions for a programming course, teaching problem-solving using Codeforces-like exercises.\", \"Conducted lectures and solved student queries using Piazza.\"],\n        logo: \"path/to/unal-logo.png\",\n        year: \"2020\",\n        skills: [\"Teaching\", \"Programming\"],\n        type: \"Education\"\n      }, {\n        company: \"Airbus Commercial Aircraft SAS\",\n        position: \"Information Access Management and DevOps Intern\",\n        location: \"Hamburg, Germany\",\n        locationCountry: \"de\",\n        startDate: \"March 2019\",\n        endDate: \"September 2019\",\n        tasks: [\"Improved IAM requests and knowledge management for a system involving 50,000+ employees.\", \"Implemented Jenkins for CI/CD deployment in Kubernetes (OpenShift).\"],\n        logo: \"path/to/airbus-logo.png\",\n        year: \"2019\",\n        skills: [\"DevOps\", \"Kubernetes\", \"Jenkins\"],\n        type: \"DevOps\"\n      }, {\n        company: \"Universidad Nacional de Colombia\",\n        position: \"Data Analyst\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"October 2019\",\n        endDate: \"November 2019\",\n        tasks: [\"Assessed performance by designing automatic reports in Metabase using MongoDB aggregation queries.\", \"Analyzed data with Python and MongoDB to enhance programming courses.\"],\n        logo: \"path/to/unal-logo.png\",\n        year: \"2019\",\n        skills: [\"Data Analysis\", \"MongoDB\"],\n        type: \"Data Science\"\n      }, {\n        company: \"Universidad Nacional de Colombia\",\n        position: \"Software Developer\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"November 2017\",\n        endDate: \"March 2018\",\n        tasks: [\"Developed a web app to manage graduate student information using Vue.js and Ruby on Rails.\", \"Designed integration and functionality tests with Test-Driven Development (TDD).\"],\n        logo: \"path/to/unal-logo.png\",\n        year: \"2018\",\n        skills: [\"Ruby on Rails\", \"Vue.js\", \"TDD\"],\n        type: \"Software Engineering\"\n      }]\n    };\n  },\n  computed: {\n    // Filter experiences based on search query or selected skill\n    filteredExperiences() {\n      if (!this.searchQuery) return this.sortedChronology;\n      const query = this.searchQuery.toLowerCase();\n      return this.experiences.filter(experience => experience.skills.some(skill => skill.toLowerCase().includes(query)));\n    },\n    // Extract unique years for the \"By Year\" tab\n    years() {\n      return [...new Set(this.experiences.map(experience => experience.year))].sort((a, b) => b - a);\n    },\n    // Group experiences by year for the \"By Year\" tab\n    experiencesByYear() {\n      return this.experiences.reduce((acc, exp) => {\n        if (!acc[exp.year]) acc[exp.year] = [];\n        acc[exp.year].push(exp);\n        return acc;\n      }, {});\n    },\n    // Sort experiences chronologically for the \"All\" tab\n    sortedChronology() {\n      return [...this.experiences].sort((a, b) => {\n        const dateA = new Date(a.endDate === \"Present\" ? new Date() : a.endDate);\n        const dateB = new Date(b.endDate === \"Present\" ? new Date() : b.endDate);\n        return dateB - dateA; // Sort descending by end date\n      });\n    }\n  },\n  methods: {\n    setViewMode(mode) {\n      this.viewMode = mode;\n      if (mode !== \"year\") {\n        this.selectedYear = \"\"; // Reset year selection if not in year mode\n      }\n    },\n    setFilter(skill) {\n      this.viewMode = \"filter\"; // Ensure filter view\n      this.searchQuery = skill; // Populate the search bar with selected skill\n    }\n  }\n};","map":{"version":3,"names":["ExperienceItem","aboAkademiLogo","name","components","data","viewMode","searchQuery","selectedYear","Date","getFullYear","toString","skillSuggestions","experiences","company","position","location","locationCountry","startDate","endDate","tasks","logo","year","skills","type","computed","filteredExperiences","sortedChronology","query","toLowerCase","filter","experience","some","skill","includes","years","Set","map","sort","a","b","experiencesByYear","reduce","acc","exp","push","dateA","dateB","methods","setViewMode","mode","setFilter"],"sources":["src/components/ExperienceSection.vue"],"sourcesContent":["<template>\n  <section class=\"light-section\">\n    <div class=\"container\">\n      <h1 class=\"section-header\">{{ sectionTitle }}</h1>\n\n      <!-- View Mode and Filter Buttons -->\n      <div class=\"view-selector\">\n        <button\n          :class=\"{ active: viewMode === 'all' }\"\n          @click=\"setViewMode('all')\"\n        >\n          Showing All\n        </button>\n        <button\n          :class=\"{ active: viewMode === 'year' }\"\n          @click=\"setViewMode('year')\"\n        >\n          View by Year\n        </button>\n        <button\n          :class=\"{ active: viewMode === 'filter' }\"\n          @click=\"setViewMode('filter')\"\n        >\n          Filter by Skills\n        </button>\n      </div>\n\n      <!-- Filter for Skills -->\n      <div v-if=\"viewMode === 'filter'\" class=\"filter-container\">\n        <input\n          type=\"text\"\n          v-model=\"searchQuery\"\n          placeholder=\"Search...\"\n        />\n        <div class=\"skill-suggestions\">\n          <button\n            v-for=\"skill in [...new Set(data.flatMap((item) => item.skills))]\"\n            :key=\"skill\"\n            @click=\"setFilter(skill)\"\n          >\n            {{ skill }}\n          </button>\n        </div>\n      </div>\n\n      <!-- All Items View -->\n      <div v-if=\"viewMode === 'all'\" class=\"item-list\">\n        <div\n          v-for=\"(item, index) in sortedChronology\"\n          :key=\"index\"\n          class=\"experience-item\"\n        >\n          <ExperienceItem :item=\"item\" />\n        </div>\n      </div>\n\n      <!-- Tabs by Year View -->\n      <div v-if=\"viewMode === 'year'\" class=\"year-tabs\">\n        <ul class=\"tab-list\">\n          <li\n            v-for=\"year in years\"\n            :key=\"year\"\n            :class=\"{ active: year === selectedYear }\"\n            @click=\"selectedYear = year\"\n          >\n            {{ year }}\n          </li>\n        </ul>\n\n        <div class=\"tab-content\">\n          <div\n            v-for=\"(item, index) in itemsByYear[selectedYear]\"\n            :key=\"index\"\n            class=\"experience-item\"\n          >\n            <ExperienceItem :item=\"item\" />\n          </div>\n        </div>\n      </div>\n\n      <!-- Filtered Items View -->\n      <div v-if=\"viewMode === 'filter'\" class=\"item-list\">\n        <div\n          v-for=\"(item, index) in filteredItems\"\n          :key=\"index\"\n          class=\"experience-item\"\n        >\n          <ExperienceItem :item=\"item\" />\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n\n<script>\nimport ExperienceItem from \"@/components/ExperienceItem.vue\";\nimport aboAkademiLogo from \"@/assets/images/abo-akademi-logo.gif\";\nexport default {\n  name: \"ProfessionalExperienceSection\",\n  components: {\n    ExperienceItem, // Register the ExperienceItem component\n  },\n  data() {\n  return {\n    viewMode: \"all\", // 'all', 'tabs', or 'filter'\n    searchQuery: \"\",\n    selectedYear: new Date().getFullYear().toString(),\n    skillSuggestions: [\"Data Science\", \"Software Engineering\", \"Research\"],\n    experiences: [\n      {\n        company: \"Åbo Akademi University\",\n        position: \"Research Assistant\",\n        location: \"Turku, Finland\",\n        locationCountry: \"fi\",\n        startDate: \"October 2024\",\n        endDate: \"Present\",\n        tasks: [\n          \"Researching automatization of co-simulation Simulink projects through Functional Mock-up Units (FMUs).\",\n          \"Exploring ubiquitous integration of automation logic, enabling model exchange HVAC systems and other complex scenarios.\",\n        ],\n        logo: aboAkademiLogo,\n        year: \"2024\",\n        skills: [\"Data Science\", \"Research\"],\n        type: \"Data Science\",\n      },\n      {\n        company: \"Alstom\",\n        position: \"Master's Thesis Student\",\n        location: \"Remote\",\n        locationCountry: \"se\",\n        startDate: \"February 2024\",\n        endDate: \"October 2024\",\n        tasks: [\n          \"Performed advanced research in Requirements Engineering to achieve automated generation of technical diagrams (i.e. Function Block Diagrams [FBD]) using NLP and AI.\",\n          \"Enhanced the verification process in railway safety-critical systems, reducing human intervention for industrial processes.\",\n        ],\n        logo: \"path/to/alstom-logo.png\",\n        year: \"2024\",\n        skills: [\"Requirements Engineering\", \"AI\", \"Research\"],\n        type: \"Research\",\n      },\n      {\n        company: \"RISE - Research Institute of Sweden\",\n        position: \"Machine Learning Intern\",\n        location: \"Remote\",\n        locationCountry: \"se\",\n        startDate: \"July 2023\",\n        endDate: \"August 2023\",\n        tasks: [\n          \"Worked on Large Language Models (LLMs) like BERT classifiers fine-tuned and evaluated for Enterprise Software Engineering.\",\n          \"Designed a pipeline for multilabel classification of GitHub issues, achieving ~75% accuracy using fine-tuned LLMs.\",\n        ],\n        logo: \"path/to/rise-logo.png\",\n        year: \"2023\",\n        skills: [\"Machine Learning\", \"Data Processing\", \"Research\"],\n        type: \"Data Science\",\n      },\n      {\n        company: \"Empresas Cruz\",\n        position: \"Technical Leader\",\n        location: \"Remote\",\n        locationCountry: \"co\",\n        startDate: \"August 2022\",\n        endDate: \"December 2022\",\n        tasks: [\n          \"Directed the development of Inmobana: a project to match real estate agents and properties with buyers.\",\n          \"Designed architecture based on microservices and AWS, using Serverless Application Model (SAM) templates.\",\n          \"Led a team of two for frontend web development in React and AWS Amplify following Scrum methodology.\",\n        ],\n        logo: \"path/to/cruz-logo.png\",\n        year: \"2022\",\n        skills: [\"Architecture\", \"AWS\", \"Scrum\"],\n        type: \"Software Engineering\",\n      },\n      {\n        company: \"PuntoRed - Veci\",\n        position: \"Backend Leader\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"January 2022\",\n        endDate: \"July 2022\",\n        tasks: [\n          \"Codirected new core business functionalities like small loans and improved payment gateway operations.\",\n          \"Interoperated with other banking APIs to enable Veci as an independent fintech startup, reaching 7000+ small businesses.\",\n        ],\n        logo: \"path/to/puntored-logo.png\",\n        year: \"2022\",\n        skills: [\"FinTech\", \"Backend Development\"],\n        type: \"Software Engineering\",\n      },\n      {\n        company: \"PuntoRed - PuntoPay\",\n        position: \"Backend Engineer\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"September 2020\",\n        endDate: \"December 2021\",\n        tasks: [\n          \"Developed RESTful backend in Ruby on Rails and front-end development with Nuxt.js for PuntoPay’s back office.\",\n          \"Reduced incident resolution times by 87% and compensation times from four days to one day.\",\n          \"Implemented unit tests in Jenkins pipelines for Dockerized microservices architecture with SonarQube assessments.\",\n        ],\n        logo: \"path/to/puntored-logo.png\",\n        year: \"2021\",\n        skills: [\"Ruby on Rails\", \"Nuxt.js\", \"CI/CD\"],\n        type: \"Software Engineering\",\n      },\n      {\n        company: \"Universidad Nacional de Colombia\",\n        position: \"Research Assistant\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"August 2020\",\n        endDate: \"February 2021\",\n        tasks: [\n          \"Performed data analysis on UNCode data to understand student progress in programming courses.\",\n          \"Enhanced automatic reporting in Metabase using MongoDB aggregation queries.\",\n        ],\n        logo: \"path/to/unal-logo.png\",\n        year: \"2020\",\n        skills: [\"Data Analysis\", \"MongoDB\"],\n        type: \"Data Science\",\n      },\n      {\n        company: \"Universidad Nacional de Colombia\",\n        position: \"Teaching Assistant\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"February 2020\",\n        endDate: \"June 2020\",\n        tasks: [\n          \"Led practical sessions for a programming course, teaching problem-solving using Codeforces-like exercises.\",\n          \"Conducted lectures and solved student queries using Piazza.\",\n        ],\n        logo: \"path/to/unal-logo.png\",\n        year: \"2020\",\n        skills: [\"Teaching\", \"Programming\"],\n        type: \"Education\",\n      },\n      {\n        company: \"Airbus Commercial Aircraft SAS\",\n        position: \"Information Access Management and DevOps Intern\",\n        location: \"Hamburg, Germany\",\n        locationCountry: \"de\",\n        startDate: \"March 2019\",\n        endDate: \"September 2019\",\n        tasks: [\n          \"Improved IAM requests and knowledge management for a system involving 50,000+ employees.\",\n          \"Implemented Jenkins for CI/CD deployment in Kubernetes (OpenShift).\",\n        ],\n        logo: \"path/to/airbus-logo.png\",\n        year: \"2019\",\n        skills: [\"DevOps\", \"Kubernetes\", \"Jenkins\"],\n        type: \"DevOps\",\n      },\n      {\n        company: \"Universidad Nacional de Colombia\",\n        position: \"Data Analyst\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"October 2019\",\n        endDate: \"November 2019\",\n        tasks: [\n          \"Assessed performance by designing automatic reports in Metabase using MongoDB aggregation queries.\",\n          \"Analyzed data with Python and MongoDB to enhance programming courses.\",\n        ],\n        logo: \"path/to/unal-logo.png\",\n        year: \"2019\",\n        skills: [\"Data Analysis\", \"MongoDB\"],\n        type: \"Data Science\",\n      },\n      {\n        company: \"Universidad Nacional de Colombia\",\n        position: \"Software Developer\",\n        location: \"Bogotá, Colombia\",\n        locationCountry: \"co\",\n        startDate: \"November 2017\",\n        endDate: \"March 2018\",\n        tasks: [\n          \"Developed a web app to manage graduate student information using Vue.js and Ruby on Rails.\",\n          \"Designed integration and functionality tests with Test-Driven Development (TDD).\",\n        ],\n        logo: \"path/to/unal-logo.png\",\n        year: \"2018\",\n        skills: [\"Ruby on Rails\", \"Vue.js\", \"TDD\"],\n        type: \"Software Engineering\",\n      },\n    ],\n  };\n},\ncomputed: {\n    // Filter experiences based on search query or selected skill\n    filteredExperiences() {\n      if (!this.searchQuery) return this.sortedChronology;\n      const query = this.searchQuery.toLowerCase();\n      return this.experiences.filter((experience) =>\n        experience.skills.some((skill) => skill.toLowerCase().includes(query))\n      );\n    },\n\n    // Extract unique years for the \"By Year\" tab\n    years() {\n      return [\n        ...new Set(this.experiences.map((experience) => experience.year)),\n      ].sort((a, b) => b - a);\n    },\n\n    // Group experiences by year for the \"By Year\" tab\n    experiencesByYear() {\n      return this.experiences.reduce((acc, exp) => {\n        if (!acc[exp.year]) acc[exp.year] = [];\n        acc[exp.year].push(exp);\n        return acc;\n      }, {});\n    },\n\n    // Sort experiences chronologically for the \"All\" tab\n    sortedChronology() {\n      return [...this.experiences].sort((a, b) => {\n        const dateA = new Date(a.endDate === \"Present\" ? new Date() : a.endDate);\n        const dateB = new Date(b.endDate === \"Present\" ? new Date() : b.endDate);\n        return dateB - dateA; // Sort descending by end date\n      });\n    },\n  },\n  methods: {\n    setViewMode(mode) {\n      this.viewMode = mode;\n      if (mode !== \"year\") {\n        this.selectedYear = \"\"; // Reset year selection if not in year mode\n      }\n    },\n    setFilter(skill) {\n      this.viewMode = \"filter\"; // Ensure filter view\n      this.searchQuery = skill; // Populate the search bar with selected skill\n    },\n  },\n};\n</script>\n\n\n<style scoped>\n.light-section {\n  background-color: #f9f9f9;\n  padding: 50px 20px;\n}\n\n.section-header {\n  text-align: center;\n  font-size: 2rem;\n  margin-bottom: 40px;\n}\n\n.view-selector {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.view-selector button {\n  margin: 0 10px;\n  padding: 10px 20px;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  background-color: #007bff;\n  color: white;\n  font-size: 1rem;\n  transition: background-color 0.3s;\n}\n\n.view-selector button.active {\n  background-color: #0056b3;\n}\n\n.view-selector button:hover {\n  background-color: #0056b3;\n}\n\n.filter-container {\n  margin: 20px auto;\n  text-align: center;\n}\n\n.filter-container input {\n  width: 50%;\n  padding: 10px;\n  font-size: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  transition: border-color 0.3s;\n}\n\n.filter-container input:focus {\n  border-color: #007bff;\n  outline: none;\n}\n\n.skill-suggestions {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n  flex-wrap: wrap;\n}\n\n.skill-suggestions button {\n  cursor: pointer;\n  padding: 5px 15px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  background-color: #f9f9f9;\n  color: #333;\n  font-size: 1rem;\n  transition: background-color 0.3s, border-color 0.3s;\n}\n\n.skill-suggestions button:hover {\n  background-color: #007bff;\n  color: white;\n  border-color: #007bff;\n}\n\n.skill-suggestions button.active {\n  background-color: #0056b3;\n  color: white;\n  border-color: #0056b3;\n}\n\n.experience-list,\n.year-tabs .tab-content {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.experience-item {\n  display: flex;\n  align-items: flex-start;\n  gap: 20px;\n  padding: 20px;\n  border-bottom: 1px solid #ddd;\n}\n\n.logo img {\n  width: 60px;\n  height: 60px;\n  object-fit: contain;\n}\n\n.details {\n  flex: 1;\n}\n\n.details .company {\n  font-size: 1.25rem;\n  font-weight: bold;\n}\n\n.details .position {\n  font-size: 1rem;\n  color: #555;\n}\n\n.details .duration,\n.details .location {\n  font-size: 0.9rem;\n  color: #888;\n}\n\n.details .skills {\n  font-size: 0.9rem;\n  color: #444;\n  margin-top: 10px;\n}\n\n.responsibilities {\n  margin-top: 10px;\n  list-style: disc;\n  padding-left: 20px;\n}\n\n.year-tabs .tab-list {\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin-bottom: 20px;\n}\n\n.year-tabs .tab-list li {\n  cursor: pointer;\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: white;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n}\n\n.year-tabs .tab-list li:hover {\n  background-color: #0056b3;\n}\n\n.year-tabs .tab-list li.active {\n  background-color: #0056b3;\n}\n</style>\n\n"],"mappings":";;;;;;;;;;;;;AAgGA,OAAAA,cAAA;AACA,OAAAC,cAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAH,cAAA;EACA;EACAI,KAAA;IACA;MACAC,QAAA;MAAA;MACAC,WAAA;MACAC,YAAA,MAAAC,IAAA,GAAAC,WAAA,GAAAC,QAAA;MACAC,gBAAA;MACAC,WAAA,GACA;QACAC,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA,GACA,0GACA,0HACA;QACAC,IAAA,EAAAnB,cAAA;QACAoB,IAAA;QACAC,MAAA;QACAC,IAAA;MACA,GACA;QACAV,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA,GACA,wKACA,8HACA;QACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;MACA,GACA;QACAV,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA,GACA,8HACA,qHACA;QACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;MACA,GACA;QACAV,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA,GACA,2GACA,6GACA,uGACA;QACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;MACA,GACA;QACAV,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA,GACA,0GACA,2HACA;QACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;MACA,GACA;QACAV,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA,GACA,iHACA,8FACA,oHACA;QACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;MACA,GACA;QACAV,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA,GACA,iGACA,8EACA;QACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;MACA,GACA;QACAV,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA,GACA,8GACA,8DACA;QACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;MACA,GACA;QACAV,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA,GACA,4FACA,sEACA;QACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;MACA,GACA;QACAV,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA,GACA,sGACA,wEACA;QACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;MACA,GACA;QACAV,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,eAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA,GACA,8FACA,mFACA;QACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;MACA;IAEA;EACA;EACAC,QAAA;IACA;IACAC,oBAAA;MACA,UAAAnB,WAAA,cAAAoB,gBAAA;MACA,MAAAC,KAAA,QAAArB,WAAA,CAAAsB,WAAA;MACA,YAAAhB,WAAA,CAAAiB,MAAA,CAAAC,UAAA,IACAA,UAAA,CAAAR,MAAA,CAAAS,IAAA,CAAAC,KAAA,IAAAA,KAAA,CAAAJ,WAAA,GAAAK,QAAA,CAAAN,KAAA,EACA;IACA;IAEA;IACAO,MAAA;MACA,QACA,OAAAC,GAAA,MAAAvB,WAAA,CAAAwB,GAAA,CAAAN,UAAA,IAAAA,UAAA,CAAAT,IAAA,GACA,CAAAgB,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAA,CAAA,GAAAD,CAAA;IACA;IAEA;IACAE,kBAAA;MACA,YAAA5B,WAAA,CAAA6B,MAAA,EAAAC,GAAA,EAAAC,GAAA;QACA,KAAAD,GAAA,CAAAC,GAAA,CAAAtB,IAAA,GAAAqB,GAAA,CAAAC,GAAA,CAAAtB,IAAA;QACAqB,GAAA,CAAAC,GAAA,CAAAtB,IAAA,EAAAuB,IAAA,CAAAD,GAAA;QACA,OAAAD,GAAA;MACA;IACA;IAEA;IACAhB,iBAAA;MACA,gBAAAd,WAAA,EAAAyB,IAAA,EAAAC,CAAA,EAAAC,CAAA;QACA,MAAAM,KAAA,OAAArC,IAAA,CAAA8B,CAAA,CAAApB,OAAA,qBAAAV,IAAA,KAAA8B,CAAA,CAAApB,OAAA;QACA,MAAA4B,KAAA,OAAAtC,IAAA,CAAA+B,CAAA,CAAArB,OAAA,qBAAAV,IAAA,KAAA+B,CAAA,CAAArB,OAAA;QACA,OAAA4B,KAAA,GAAAD,KAAA;MACA;IACA;EACA;EACAE,OAAA;IACAC,YAAAC,IAAA;MACA,KAAA5C,QAAA,GAAA4C,IAAA;MACA,IAAAA,IAAA;QACA,KAAA1C,YAAA;MACA;IACA;IACA2C,UAAAlB,KAAA;MACA,KAAA3B,QAAA;MACA,KAAAC,WAAA,GAAA0B,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}