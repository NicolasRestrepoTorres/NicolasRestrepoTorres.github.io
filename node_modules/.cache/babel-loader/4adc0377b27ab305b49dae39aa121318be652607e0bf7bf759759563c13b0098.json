{"ast":null,"code":"export default {\n  name: \"Arrow\",\n  data() {\n    return {\n      sections: [\"home\", \"about\", \"education\", \"experience\", \"skills\", \"portfolio\", \"project\"],\n      currentIndex: 0,\n      offsetCorrection: 50 // Adjust this value based on your header height\n    };\n  },\n  computed: {\n    prevSection() {\n      return this.currentIndex > 0 ? this.sections[this.currentIndex - 1] : null;\n    },\n    nextSection() {\n      return this.currentIndex < this.sections.length - 1 ? this.sections[this.currentIndex + 1] : null;\n    }\n  },\n  methods: {\n    updateCurrentSection() {\n      let scrollPosition = window.scrollY + window.innerHeight / 3;\n      let foundIndex = this.sections.findIndex(sectionId => {\n        let section = document.getElementById(sectionId);\n        return section && section.offsetTop <= scrollPosition && section.offsetTop + section.offsetHeight > scrollPosition;\n      });\n      if (foundIndex !== -1) {\n        this.currentIndex = foundIndex;\n      }\n    },\n    scrollToSection(sectionId) {\n      let section = document.getElementById(sectionId);\n      if (section) {\n        let yOffset = section.getBoundingClientRect().top + window.scrollY - this.offsetCorrection;\n        window.scrollTo({\n          top: yOffset,\n          behavior: \"smooth\"\n        });\n      }\n    }\n  },\n  mounted() {\n    this.updateCurrentSection();\n    window.addEventListener(\"scroll\", this.updateCurrentSection);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"scroll\", this.updateCurrentSection);\n  }\n};","map":{"version":3,"names":["name","data","sections","currentIndex","offsetCorrection","computed","prevSection","nextSection","length","methods","updateCurrentSection","scrollPosition","window","scrollY","innerHeight","foundIndex","findIndex","sectionId","section","document","getElementById","offsetTop","offsetHeight","scrollToSection","yOffset","getBoundingClientRect","top","scrollTo","behavior","mounted","addEventListener","beforeUnmount","removeEventListener"],"sources":["src/components/Arrow.vue"],"sourcesContent":["<template>\n  <div class=\"arrow-container\">\n    <button v-if=\"prevSection\" @click=\"scrollToSection(prevSection)\" class=\"arrow-icon up\" role=\"button\">\n      <i class=\"fas fa-chevron-up fa-3x\"></i>\n    </button>\n    <button v-if=\"nextSection\" @click=\"scrollToSection(nextSection)\" class=\"arrow-icon down\" role=\"button\">\n      <i class=\"fas fa-chevron-down fa-3x\"></i>\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Arrow\",\n  data() {\n    return {\n      sections: [\"home\", \"about\", \"education\", \"experience\", \"skills\", \"portfolio\", \"project\"],\n      currentIndex: 0,\n      offsetCorrection: 50, // Adjust this value based on your header height\n    };\n  },\n  computed: {\n    prevSection() {\n      return this.currentIndex > 0 ? this.sections[this.currentIndex - 1] : null;\n    },\n    nextSection() {\n      return this.currentIndex < this.sections.length - 1 ? this.sections[this.currentIndex + 1] : null;\n    }\n  },\n  methods: {\n    updateCurrentSection() {\n      let scrollPosition = window.scrollY + window.innerHeight / 3;\n      let foundIndex = this.sections.findIndex((sectionId) => {\n        let section = document.getElementById(sectionId);\n        return section && section.offsetTop <= scrollPosition && section.offsetTop + section.offsetHeight > scrollPosition;\n      });\n\n      if (foundIndex !== -1) {\n        this.currentIndex = foundIndex;\n      }\n    },\n    scrollToSection(sectionId) {\n      let section = document.getElementById(sectionId);\n      if (section) {\n        let yOffset = section.getBoundingClientRect().top + window.scrollY - this.offsetCorrection;\n        window.scrollTo({ top: yOffset, behavior: \"smooth\" });\n      }\n    }\n  },\n  mounted() {\n    this.updateCurrentSection();\n    window.addEventListener(\"scroll\", this.updateCurrentSection);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"scroll\", this.updateCurrentSection);\n  }\n};\n</script>\n\n<style>\n.arrow-container {\n  position: fixed;\n  right: 20px;\n  bottom: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  z-index: 1000;\n}\n\n.arrow-icon {\n  background: white;\n  border-radius: 50%;\n  padding: 10px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  text-decoration: none;\n  border: none;\n  cursor: pointer;\n}\n\n.arrow-icon:hover {\n  background: #ddd;\n}\n\n.up {\n  position: fixed;\n  right: 20px;\n  bottom: 90px;\n}\n\n.down {\n  position: fixed;\n  right: 20px;\n  bottom: 40px;\n}\n</style>\n"],"mappings":"AAYA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,YAAA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;IACAC,YAAA;MACA,YAAAH,YAAA,YAAAD,QAAA,MAAAC,YAAA;IACA;IACAI,YAAA;MACA,YAAAJ,YAAA,QAAAD,QAAA,CAAAM,MAAA,YAAAN,QAAA,MAAAC,YAAA;IACA;EACA;EACAM,OAAA;IACAC,qBAAA;MACA,IAAAC,cAAA,GAAAC,MAAA,CAAAC,OAAA,GAAAD,MAAA,CAAAE,WAAA;MACA,IAAAC,UAAA,QAAAb,QAAA,CAAAc,SAAA,CAAAC,SAAA;QACA,IAAAC,OAAA,GAAAC,QAAA,CAAAC,cAAA,CAAAH,SAAA;QACA,OAAAC,OAAA,IAAAA,OAAA,CAAAG,SAAA,IAAAV,cAAA,IAAAO,OAAA,CAAAG,SAAA,GAAAH,OAAA,CAAAI,YAAA,GAAAX,cAAA;MACA;MAEA,IAAAI,UAAA;QACA,KAAAZ,YAAA,GAAAY,UAAA;MACA;IACA;IACAQ,gBAAAN,SAAA;MACA,IAAAC,OAAA,GAAAC,QAAA,CAAAC,cAAA,CAAAH,SAAA;MACA,IAAAC,OAAA;QACA,IAAAM,OAAA,GAAAN,OAAA,CAAAO,qBAAA,GAAAC,GAAA,GAAAd,MAAA,CAAAC,OAAA,QAAAT,gBAAA;QACAQ,MAAA,CAAAe,QAAA;UAAAD,GAAA,EAAAF,OAAA;UAAAI,QAAA;QAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAnB,oBAAA;IACAE,MAAA,CAAAkB,gBAAA,gBAAApB,oBAAA;EACA;EACAqB,cAAA;IACAnB,MAAA,CAAAoB,mBAAA,gBAAAtB,oBAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}