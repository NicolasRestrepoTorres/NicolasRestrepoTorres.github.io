{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.flat-map.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport data from \"@/data/data.json\";\nexport default {\n  name: \"Skills\",\n  data() {\n    return {\n      skills: data.skills.categories,\n      heading: data.main.headings.skills,\n      currentCategory: \"All Skills\",\n      maxYears: 5,\n      // Max bar width represents 5 years\n      categoryColors: {\n        \"Programming Languages\": \"#4CAF50\",\n        Frameworks: \"#FF9800\",\n        Technologies: \"#03A9F4\",\n        \"Front-End\": \"#E91E63\",\n        \"Back-End\": \"#9C27B0\",\n        Methodologies: \"#009688\"\n      }\n    };\n  },\n  computed: {\n    allSkills() {\n      return this.skills.flatMap(category => category.skillList.map(skill => ({\n        ...skill,\n        category: category.category\n      })));\n    },\n    filteredSkills() {\n      if (this.currentCategory === \"All Skills\") {\n        return this.skills; // Return all categories for \"All Skills\"\n      }\n\n      // Filter skills based on a partial match of skill name or category\n      const searchTerm = this.currentCategory.toLowerCase();\n      return this.skills.map(category => ({\n        ...category,\n        skillList: category.skillList.filter(skill => skill.name.toLowerCase().includes(searchTerm) || category.category.toLowerCase().includes(searchTerm))\n      })).filter(category => category.skillList.length > 0); // Remove empty categories\n    }\n  },\n  methods: {\n    setCategory(category) {\n      this.currentCategory = category;\n    }\n  }\n};","map":{"version":3,"names":["data","name","skills","categories","heading","main","headings","currentCategory","maxYears","categoryColors","Frameworks","Technologies","Methodologies","computed","allSkills","flatMap","category","skillList","map","skill","filteredSkills","searchTerm","toLowerCase","filter","includes","length","methods","setCategory"],"sources":["src/components/Skills.vue"],"sourcesContent":["<template>\n  <section id=\"skills\" class=\"light-section\">\n    <div class=\"container-fluid\">\n      <h1 class=\"section-header\">{{ heading }}</h1>\n\n      <!-- Filters -->\n      <div class=\"row filters\">\n        <ul class=\"list-inline mx-auto\">\n          <li\n            v-for=\"item in skills\"\n            :key=\"item.category\"\n            class=\"list-inline-item filter\"\n          >\n            <a\n              class=\"nav-item\"\n              :class=\"{ active: item.category === currentCategory }\"\n              :data-category=\"item.category\"\n              @click=\"setCategory\"\n              >{{ item.category }}</a\n            >\n          </li>\n          <!-- All Skills Tab -->\n          <li class=\"list-inline-item filter\">\n            <a\n              class=\"nav-item\"\n              :class=\"{ active: currentCategory === 'All Skills' }\"\n              @click=\"setCategory('All Skills')\"\n              >All Skills</a\n            >\n          </li>\n        </ul>\n      </div>\n\n      <!-- All Skills Grid -->\n      <div v-if=\"currentCategory === 'All Skills'\" class=\"skills-grid\">\n        <div\n          v-for=\"(skill, index) in allSkills\"\n          :key=\"index\"\n          class=\"skill-item\"\n          :data-category=\"skill.category\"\n          :style=\"{ borderColor: categoryColors[skill.category] }\"\n        >\n          <h3>{{ skill.name }}</h3>\n          <p>{{ skill.years }} years</p>\n        </div>\n      </div>\n\n      <!-- Skill Bars -->\n      <div\n        v-else\n        id=\"skill-container\"\n        v-for=\"item in filteredSkills\"\n        :key=\"item.category\"\n      >\n        <div class=\"category-heading\">\n          <h2><i :class=\"item.faClass\"></i> {{ item.category }}</h2>\n          <h3 v-if=\"item.subtitle\">{{ item.subtitle }}</h3>\n        </div>\n\n        <div class=\"skill-content\">\n          <div class=\"skillbars\">\n            <div\n              class=\"skill\"\n              v-for=\"skill in item.skillList\"\n              :key=\"skill.name\"\n            >\n              <h3 class=\"skill-name\">{{ skill.name }}</h3>\n              <div class=\"outer-bar\">\n                <div\n                  class=\"inner-bar\"\n                  :style=\"{ width: (skill.years / maxYears) * 100 + '%' }\"\n                ></div>\n                <span class=\"years\">{{ skill.years }} years</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport data from \"@/data/data.json\";\n\nexport default {\n  name: \"Skills\",\n  data() {\n    return {\n      skills: data.skills.categories,\n      heading: data.main.headings.skills,\n      currentCategory: \"All Skills\",\n      maxYears: 5, // Max bar width represents 5 years\n      categoryColors: {\n        \"Programming Languages\": \"#4CAF50\",\n        Frameworks: \"#FF9800\",\n        Technologies: \"#03A9F4\",\n        \"Front-End\": \"#E91E63\",\n        \"Back-End\": \"#9C27B0\",\n        Methodologies: \"#009688\",\n      },\n    };\n  },\n  computed: {\n  allSkills() {\n    return this.skills.flatMap((category) =>\n      category.skillList.map((skill) => ({\n        ...skill,\n        category: category.category,\n      }))\n    );\n  },\n  filteredSkills() {\n    if (this.currentCategory === \"All Skills\") {\n      return this.skills; // Return all categories for \"All Skills\"\n    }\n\n    // Filter skills based on a partial match of skill name or category\n    const searchTerm = this.currentCategory.toLowerCase();\n    return this.skills\n      .map((category) => ({\n        ...category,\n        skillList: category.skillList.filter(\n          (skill) =>\n            skill.name.toLowerCase().includes(searchTerm) ||\n            category.category.toLowerCase().includes(searchTerm)\n        ),\n      }))\n      .filter((category) => category.skillList.length > 0); // Remove empty categories\n  },\n},\n\n  methods: {\n    setCategory(category) {\n      this.currentCategory = category;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n/* General Styling */\n.light-section {\n  background-color: #f9f9f9;\n  padding: 50px 0;\n}\n\n.section-header {\n  text-align: center;\n  font-size: 2.5rem;\n  margin-bottom: 40px;\n  font-weight: bold;\n}\n\n/* Filters */\n.filters .nav-item {\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n}\n\n.filters .nav-item.active {\n  font-weight: bold;\n  color: #007bff;\n}\n\n.filters .nav-item:hover {\n  color: #0056b3;\n}\n\n/* Skill Bars */\n.skillbars .skill {\n  margin-bottom: 1rem;\n\n  .skill-name {\n    font-weight: bold;\n  }\n\n  .outer-bar {\n    background: #eaeaea;\n    border-radius: 5px;\n    height: 10px;\n    position: relative;\n  }\n\n  .inner-bar {\n    height: 100%;\n    background: #007bff;\n    border-radius: 5px;\n    transition: width 0.3s ease;\n  }\n\n  .years {\n    position: absolute;\n    top: -20px;\n    right: 0;\n    font-size: 0.8rem;\n    color: #333;\n  }\n}\n\n/* Skills Grid */\n.skills-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n\n  .skill-item {\n    padding: 1rem;\n    border: 2px solid;\n    border-radius: 10px;\n    text-align: center;\n    background: white;\n  }\n\n  .skill-item h3 {\n    font-weight: bold;\n  }\n}\n</style>\n"],"mappings":";;;;AAmFA,OAAAA,IAAA;AAEA;EACAC,IAAA;EACAD,KAAA;IACA;MACAE,MAAA,EAAAF,IAAA,CAAAE,MAAA,CAAAC,UAAA;MACAC,OAAA,EAAAJ,IAAA,CAAAK,IAAA,CAAAC,QAAA,CAAAJ,MAAA;MACAK,eAAA;MACAC,QAAA;MAAA;MACAC,cAAA;QACA;QACAC,UAAA;QACAC,YAAA;QACA;QACA;QACAC,aAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,UAAA;MACA,YAAAZ,MAAA,CAAAa,OAAA,CAAAC,QAAA,IACAA,QAAA,CAAAC,SAAA,CAAAC,GAAA,CAAAC,KAAA;QACA,GAAAA,KAAA;QACAH,QAAA,EAAAA,QAAA,CAAAA;MACA,GACA;IACA;IACAI,eAAA;MACA,SAAAb,eAAA;QACA,YAAAL,MAAA;MACA;;MAEA;MACA,MAAAmB,UAAA,QAAAd,eAAA,CAAAe,WAAA;MACA,YAAApB,MAAA,CACAgB,GAAA,CAAAF,QAAA;QACA,GAAAA,QAAA;QACAC,SAAA,EAAAD,QAAA,CAAAC,SAAA,CAAAM,MAAA,CACAJ,KAAA,IACAA,KAAA,CAAAlB,IAAA,CAAAqB,WAAA,GAAAE,QAAA,CAAAH,UAAA,KACAL,QAAA,CAAAA,QAAA,CAAAM,WAAA,GAAAE,QAAA,CAAAH,UAAA,CACA;MACA,IACAE,MAAA,CAAAP,QAAA,IAAAA,QAAA,CAAAC,SAAA,CAAAQ,MAAA;IACA;EACA;EAEAC,OAAA;IACAC,YAAAX,QAAA;MACA,KAAAT,eAAA,GAAAS,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}